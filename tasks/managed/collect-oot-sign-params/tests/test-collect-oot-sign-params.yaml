---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-oot-sign-params
spec:
  description: |
    Run the collect-oot-sign-params task and verify the results
  workspaces:
    - name: tests-workspace
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
      default: "empty"
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
      default: "/var/workdir/release"
    - name: taskGitUrl
      type: string
      description: The git repository URL for task and StepAction resolution
      default: https://github.com/konflux-ci/release-service-catalog.git
    - name: taskGitRevision
      type: string
      description: The git revision for task and StepAction resolution
      default: main
  tasks:
    - name: run-task
      taskRef:
        name: collect-oot-sign-params
      params:
        - name: snapshotPath
          value: snapshot.json
        - name: dataPath
          value: data.json
        - name: ociStorage
          value: $(params.ociStorage)
        - name: ociArtifactExpiresAfter
          value: $(params.ociArtifactExpiresAfter)
        - name: orasOptions
          value: $(params.orasOptions)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
        - name: sourceDataArtifact
          value: ""
        - name: dataDir
          value: $(params.dataDir)
        - name: taskGitUrl
          value: $(params.taskGitUrl)
        - name: taskGitRevision
          value: $(params.taskGitRevision)
      workspaces:
        - name: data
          workspace: tests-workspace

    - name: check-result
      params:
        - name: checksumFingerprint 
          value: $(tasks.run-task.results.checksumFingerprint)
        - name: checksumKeytab
          value: $(tasks.run-task.results.checksumKeytab)
        - name: signing-secret 
          value: $(tasks.run-task.results.signing-secret)
        - name: kmodsPath
          value: $(tasks.run-task.results.kmodsPath)
        - name: vendor
          value: $(tasks.run-task.results.vendor)
        - name: artifact-repo-url
          value: $(tasks.run-task.results.artifact-repo-url)
        - name: artifact-repo-token
          value: $(tasks.run-task.results.artifact-repo-token)
        - name: artifact-branch
          value: $(tasks.run-task.results.artifact-branch)
      taskSpec:
        params:
          - name: checksumFingerprint
          - name: checksumKeytab
          - name: signing-secret
          - name: kmodsPath
          - name: vendor
          - name: artifact-repo-url
          - name: artifact-repo-token
          - name: artifact-branch
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            env:
              - name: "checksumFingerprint"
                value: '$(params.checksumFingerprint)'
              - name: "checksumKeytab"
                value: '$(params.checksumKeytab)'
              - name: "signing_secret"
                value: '$(params.signing-secret)'
              - name: "kmodsPath"
                value: '$(params.kmodsPath)'
              - name: "vendor"
                value: '$(params.vendor)'
              - name: "artifact_repo_url"
                value: '$(params.artifact-repo-url)'
              - name: "artifact_repo_token"
                value: '$(params.artifact-repo-token)'
              - name: "artifact_branch"
                value: '$(params.artifact-branch)'

            script: |
              #!/usr/bin/env bash
              set -eux

              # shellcheck disable=SC2154
              if [ "$checksumFingerprint" = "my-fprint" ]; then
                  echo "SUCCESS: checksumFingerprint found"
              else
                  echo "ERROR: checksumFingerprint empty or invalid: '$checksumFingerprint'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$checksumKeytab" = "my-keytab" ]; then
                  echo "SUCCESS: checksumKeytab found"
              else
                  echo "ERROR: checksumKeytab empty or invalid: '$checksumKeytab'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$signing_secret" = "my-secret" ]; then
                  echo "SUCCESS: signing-secret found"
              else
                  echo "ERROR: signing-secret empty or invalid: '$signing_secret'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$kmodsPath" = "my-kmods" ]; then
                  echo "SUCCESS: kmodsPath found"
              else
                  echo "ERROR: kmodsPath empty or invalid: '$kmodsPath'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$vendor" = "my-vendor" ]; then
                  echo "SUCCESS: vendor found"
              else
                  echo "ERROR: vendor empty or invalid: '$vendor'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$artifact_repo_url" = "my-artifact-url" ]; then
                  echo "SUCCESS: artifact-repo-url found"
              else
                  echo "ERROR: artifact-repo-url empty or invalid: '$artifact_repo_url'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$artifact_repo_token" = "my-artifact-repo-token" ]; then
                  echo "SUCCESS: artifact-repo-token found"
              else
                  echo "ERROR: artifact-repo-token empty or invalid: '$artifact_repo_token'"
                  exit 1
              fi

              # shellcheck disable=SC2154
              if [ "$artifact_branch" = "my-artifact-branch" ]; then
                  echo "SUCCESS: artifact-branch found"
              else
                  echo "ERROR: artifact-branch empty or invalid: '$artifact_branch'"
                  exit 1
              fi
              
              echo "All tests passed successfully!"
      runAfter:
        - run-task
