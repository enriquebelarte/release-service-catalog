---
apiVersion: tekton.dev/v1
kind: Pipeline 
metadata:
  name: test-extract-kmods-from-image
spec:
  description: >-
    Run the extract kernel modules task from an image in a specific directory.
  workspaces:
    - name: tests-workspace
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  tasks:
    - name: setup
      workspaces:
        - name: input-data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: input-data
        steps:
          - name: skip-trusted-artifact-operations
            computeResources:
              limits:
                memory: 32Mi
              requests:
                memory: 32Mi
                cpu: 20m
            ref:
              resolver: "git"
              params:
                - name: url
                  value: $(params.taskGitUrl)
                - name: revision
                  value: $(params.taskGitRevision)
                - name: pathInRepo
                  value: stepactions/skip-trusted-artifact-operations/skip-trusted-artifact-operations.yaml
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: workDir
                value: $(params.dataDir)
          - name: use-trusted-artifact
            ref:
              resolver: "git"
              params:
                - name: url
                  value: $(params.taskGitUrl)
                - name: revision
                  value: $(params.taskGitRevision)
                - name: pathInRepo
                  value: stepactions/use-trusted-artifact/use-trusted-artifact.yaml
            params:
              - name: workDir
                value: $(params.dataDir)
              - name: sourceDataArtifact
                value: $(params.sourceDataArtifact)
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux
              mkdir "$(workspaces.input-data.path)"/kmods
              touch "$(workspaces.input-data.path)"/kmods/mod1.ko
              touch "$(workspaces.input-data.path)"/kmods/mod2.ko
              touch "$(workspaces.input-data.path)"/manifest.json
          - name: run-task
            taskRef:
              name: extract-kmods-from-image
            params: 
              - name: kmodsPath
                value: kmods 
              - name: signedKmodsPath
                value: signed-kmods
              - name: snapshot
                value: my-snapshot
            workspaces:
              - name: input-data
                workspace: tests-workspace
            runAfter:
              - setup
          - name: check-result
            taskSpec:
              workspaces:
                - name: input-data
              steps:
                - name: check-values
                  image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
                  script: |
                    #!/usr/bin/env bash
                    set -eux
       
                    if [ -e "$(workspaces.input-data.path)/kmods/mod1.ko" ] && \
                       [ -e "$(workspaces.input-data.path)/kmods/mod2.ko" ]; then
                      echo "Both kmod files were extracted"
                    else
                      echo "ERR: Modules could not be extracted"
                      exit 1
                    fi
            params:
              - name: kmodsPath
                value: kmods
              - name: signedKmodsPath
                value: signed-kmods
              - name: snapshot
                value: my-snapshot
            workspaces:
              - name: input-data
                workspace: tests-workspace
            runAfter:
              - run-task
