---
apiVersion: tekton.dev/v1
kind: Pipeline 
metadata:
  name: test-extract-kmods-from-image
spec:
  description: >-
    Run the extract kernel modules task from an image in a specific directory.
  workspaces:
    - name: tests-workspace 
  tasks:
    - name: setup
      workspaces:
        - name: input-data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: input-data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux
              mkdir "$(workspaces.input-data.path)"/kmods
              touch "$(workspaces.input-data.path)"/kmods/mod1.ko
              touch "$(workspaces.input-data.path)"/kmods/mod2.ko
              touch "$(workspaces.input-data.path)"/manifest.json
    - name: run-task
      taskRef:
        name: extract-kmods-from-image
      params: 
        - name: kmodsPath
          value: kmods 
        - name: signedKmodsPath
          value: signed-kmods
        - name: snapshot
          value: my-snapshot
      workspaces:
        - name: input-data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      taskSpec:
        workspaces:
          - name: input-data
        steps:
          - name: check-values
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux

              if [ -e "$(workspaces.input-data.path)/kmods/mod1.ko" ] && \
                 [ -e "$(workspaces.input-data.path)/kmods/mod2.ko" ]; then
                echo "Both kmod files were extracted"
              else
                echo "ERR: Modules could not be extracted"
                exit 1
              fi

      params:
        - name: kmodsPath
          value: kmods
        - name: signedKmodsPath
          value: signed-kmods
        - name: snapshot
          value: my-snapshot
      workspaces:
        - name: input-data
          workspace: tests-workspace
      runAfter:
        - run-task
